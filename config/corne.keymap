/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        i_ua: i_uml_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DQT>, <&macro_tap &kp A>;
        };
        i_uo: i_uml_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DQT>, <&macro_tap &kp O>;
        };
        i_dqt: i_double_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DQT>, <&macro_tap &kp SPACE>;
        };
        i_sqt: i_single_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SQT>, <&macro_tap &kp SPACE>;
        };
        i_gr: i_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp GRAVE>, <&macro_tap &kp SPACE>;
        };
        i_td: i_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp TILDE>, <&macro_tap &kp SPACE>;
        };
        i_ct: i_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings= <&macro_tap &kp CARET>, <&macro_tap &kp SPACE>;
        };

        sp4: four_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPACE &kp SPACE &kp SPACE &kp SPACE>;
        };
        bnt: bt_next_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_NXT>;
        };
        bpt: bt_prev_tap_dance {
            ccompatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_PRV>;
        };
        bct: bt_clr_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_CLR>;
        };
        ott: out_tog_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&out OUT_TOG>;
        };

        oft: off_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&soft_off>;
        };

        sst: screenshot_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&kp PSCRN>;
        };

        mtl: mo_to_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };
    };
};

&caps_word {
    continue-list = <
                    UNDERSCORE
                    MINUS
                    DELETE
                    BACKSPACE
                    >;
};


/ {
    keymap {
        compatible =  "zmk,keymap" ;

        default {
                        display-name = "Def";
// -------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  F  |  P  |  G  | --- |  J  |  L  |  U  |  Y  |  :  | RET |
// | SFT |  A  |  R  |  S  |  T  |  D  | --- |  H  |  N  |  E  |  I  |  O  | SFT |
// | CTL |  Z  |  X  |  C  |  V  |  B  | --- |  K  |  M  |  ,  |  .  |  ;  | ALT |
// |     |     |     | GUI | MLN | BSP | --- | SPC | MRM |     |     |     |     |
                        bindings = <
   &kp TAB    &kp Q  &kp W  &kp F     &kp P      &kp G         &kp J      &kp L     &kp U      &kp Y     &kp COLON  &kp RET
   &kp LSHFT  &kp A  &kp R  &kp S     &kp T      &kp D         &kp H      &kp N     &kp E      &kp I     &kp O      &kp LSHFT
   &kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B         &kp K      &kp M     &kp COMMA  &kp DOT   &kp SEMI   &kp LALT
                            &kp LGUI  &mtl 3 2   &kp BSPC      &kp SPACE  &mtl 4 1  &none
                        >;
                };
                mov {  // bts and output toggle must use some modifier ALT, CTRL, SHIFT
                        display-name = "MOV";
// -------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  F  |  P  |  G  | --- |  J  | PGU | UP  | PGD |  :  | RET |
// | SFT |  A  |  R  |  S  |  T  |  D  | --- | HME | LFT | DWN | RGT | END | SFT |
// | CTL |  Z  |  X  |  C  |  V  |  B  | --- |  K  | DEL |  .  |  ,  | SST | ALT |
// |     |     |     | GUI | MLN | BSP | --- | SPC | MRM | DEF |     |     |     |
            bindings = <
   &trans  &trans  &trans  &trans  &trans    &trans      &trans    &kp PG_UP  &kp UP    &kp PG_DN  &trans   &trans
   &trans  &trans  &trans  &trans  &trans    &trans      &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END  &trans
   &trans  &trans  &trans  &trans  &trans    &trans      &trans    &kp DEL    &trans    &trans     &sst     &trans
                           &trans  &mtl 3 2  &trans      &trans    &mtl 4 1   &to 0
                        >;
                };
                num {  // OTG, BTN, BTP, BTD, OFF with double-tap
                        display-name = "NUM";
// -------------------------------------------------------------------------------
// | TAB | F9  | F10 | F11 | F12 | OTG | --- |     |  7  |  8  |  9  | OFF | RET |
// | SFT | F5  | F6  | F7  | F8  | BTN | --- |     |  4  |  5  |  6  |  0  | SFT |
// | CTL | F1  | F2  | F3  | F4  | BTP | --- |     |  1  |  2  |  3  | BTD | ALT |
// |     |     |     | GUI | MLN | BSP | --- | SPC | MRM | DEF |     |     |     |
            bindings = <
   &trans  &kp F9  &kp F10  &kp F11 &kp F12   &ott        &none   &kp N7    &kp N8  &kp N9  &oft    &trans
   &trans  &kp F5  &kp F6   &kp F7  &kp F8    &bnt        &none   &kp N4    &kp N5  &kp N6  &kp N0  &trans
   &trans  &kp F1  &kp F2   &kp F3  &kp F4    &bpt        &none   &kp N1    &kp N2  &kp N3  &bct    &trans
                            &trans  &mtl 3 2  &trans      &trans  &mtl 4 1  &to 0
            >;
        };
                left_layer {
                        display-name = "L";
// -------------------------------------------------------------------------------
// | TAB |  !  |  @  |  #  |  $  |  %  | --- |  ^  |  &  |  *  |  (  |  )  | RET |
// | SFT |  Ä  |  `  |  '  |  "  |  ~  | --- |  !  |  ?  |  ,  |  .  |  Ö  | SFT |
// | CTL |  ^  |  `  |  '  |  "  |  ~  | --- | 4sp | DEL | CAP |  .  |  ;  | ALT |
// |     |     |     | GUI |     | BSP | --- | SPC |     | ESC |     |     |     |
                        bindings = <
   &trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT      &i_ct     &kp AMPS   &kp ASTRK   &kp LPAR  &kp RPAR  &trans
   &trans  &i_ua      &i_gr      &i_sqt    &i_dqt    &i_td          &kp EXCL  &kp QMARK  &kp COMMA   &kp DOT   &i_uo     &trans
   &trans  &kp CARET  &kp GRAVE  &kp SQT   &kp DQT   &kp TILDE      &sp4      &kp DEL    &caps_word  &kp DOT   &kp SEMI  &trans
                                 &trans    &none     &trans         &trans    &none      &kp ESC
                        >;
                };
                right_layer {
                        display-name = "R";
// -------------------------------------------------------------------------------
// | TAB |     |     |  _  |  =  |     | --- |     |  +  |  -  |  |  |  :  | RET |
// | SFT |  <  |  (  |  [  |  {  |  /  | --- |  \  |  }  |  ]  |  )  |  >  | SFT |
// | CTL |  Z  |  X  |  C  |  V  |  B  | --- | 4sp | DEL | CAP |  .  |  ;  | ALT |
// |     |     |     | GUI |     | BSP | --- | SPC |     | ESC |     |     |     |
                        bindings = <
   &trans  &none   &none      &kp UNDER  &kp EQUAL  &none         &none     &kp PLUS  &kp MINUS   &kp PIPE  &kp COLON  &trans
   &trans  &kp LT  &kp LPAR   &kp LBKT   &kp LBRC   &kp FSLH      &kp BSLH  &kp RBRC  &kp RBKT    &kp RPAR  &kp GT     &trans
   &trans  &kp Z   &kp X      &kp C      &kp V      &kp B         &sp4      &kp DEL   &caps_word  &trans    &trans     &trans
                              &trans     &none      &trans        &trans    &none     &kp ESC
                        >;
                };

    };
};
